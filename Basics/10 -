//The 7458 is a chip with four AND gates and two OR gates. This problem is slightly more complex than 7420.
//Create a module with the same functionality as the 7458 chip. It has 10 inputs and 2 outputs. You may choose to use an assign statement to drive each of the output wires, 
//or you may choose to declare (four) wires for use as intermediate signals, where each internal wire is driven by the output of one of the AND gates. For extra practice, 
//try it both ways.
//Diagram shown here (https://hdlbits.01xz.net/wiki/7458)

module top_module ( 
    //designing a  7458  chip
    input p1a, p1b, p1c, p1d, p1e, p1f,
    output p1y,
    input p2a, p2b, p2c, p2d,
    output p2y );
	
    wire and_wire_a, an3_wire_b, and_wire_c, and_wire_d;
    
    assign and_wire_a = p1a && p1b && p1c; //3 input logical and gate p1a, p1b, & p1c. 
    assign and_wire_b = p1d && p1e && p1f; //3 input logical and gate p1d, p1e, & p1f. 
    assign and_wire_c = p2a && p2b;        //2 input logical and gate p2a & p2b. 
    assign and_wire_d = p2c && p2d;        //2 input logical and gate p2c & p2d.  
    
    assign p1y = and_wire_a || and_wire_b; //2 input logical OR of and_wire_a & and_wire_b
    assign p2y = and_wire_c || and_wire_d; //2 input logical OR of and_wire_c & and_wire_d
    

endmodule
